package com.jobready.threadpools;

import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class ThreadPoolDemo {

	public static void main(String[] args) throws InterruptedException {
		//recycles threads count provided
		ExecutorService executor = Executors.newFixedThreadPool(2);
		
		Runnable processor1 = new MessageProcessor(1);
		executor.execute(processor1);
		
		Runnable processor2 = new MessageProcessor(2);
		executor.execute(processor2);
		
		Runnable processor3 = new MessageProcessor(3);
		executor.execute(processor3);
		
		Runnable processor4 = new MessageProcessor(4);
		executor.execute(processor4);
		
		executor.shutdown();// Rejects any new task being submitted and shuts downs.
		//executor.shutdownNow(); // Terminates the executor immediately
		
		while(!executor.isTerminated()) {
			// Makes sure all executor task are finished first and them remaining statement executed.
		}
		
		//Alternative to prev while loop we can use below
		executor.awaitTermination(10, TimeUnit.SECONDS);
		
		System.out.println("Submitted all tasks...");
	}

}
